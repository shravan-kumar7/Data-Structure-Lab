#include <stdio.h>
#include<stdlib.h>
struct node{
    int data;
    struct node *left;
    struct node *right;
};
struct node *maketree(){
    struct node *p;
    int info;
    printf("enter the info or -1 for null:\n");
    scanf("%d",&info);
    if(info==-1){
        return NULL;
    }
    p=(struct node*)malloc(sizeof(struct node));
    p->data=info;
    printf("enter the left child of %d\n",info);
    p->left=maketree();
    printf("enter the right child of %d\n",info);
    p->right=maketree();
    return p;
}
void preorder(struct node*t){
    if(t!=NULL){
        printf("%d->",t->data);
        preorder(t->left);
        preorder(t->right);
    }
}
void postorder(struct node *t){
    if(t!=NULL){
         postorder(t->left);
        postorder(t->right);
        printf("%d->",t->data);
        
    }
}
void inorder(struct node *t){
    if(t!=NULL){
         inorder(t->left);
                 printf("%d->",t->data);
        inorder(t->right);
    }
}
int main(){
    struct node *root;
    root=0;
    root=maketree();
    printf("preorder:");
    preorder(root);
    printf("\npostorder:");
    postorder(root);
    printf("\ninorder:");
    inorder(root);
    return 0;
}
